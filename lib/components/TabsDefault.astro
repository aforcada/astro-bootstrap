---
import { Tabs } from '../../index';

import { nanoid } from 'nanoid';

const {
  tabs,
  id: userId,
  listClass,
  itemClass,
  linkClass,
  contentClass,
  paneClass,
  fade = false,
} = Astro.props;

const id = userId || `tabs-${nanoid(8)}`;

export interface TabType {
  title: string;
  body: string;
  active?: boolean;
}

export interface TabContentInterface {
  tabs?: TabType[];
  id?: string;
  fade?: boolean;
  listClass?: string;
  itemClass?: string;
  linkClass?: string;
  contentClass?: string;
  paneClass?: string;
}

export interface Props extends TabContentInterface {}
---

<Tabs.List {id} class={listClass}>
  <slot>
    {
      tabs &&
        tabs.map((tab: TabInterface, index: number) => (
          <Tabs.Item
            {index}
            {id}
            active={tab.active}
            class={itemClass}
            {linkClass}
          >
            {tab.title}
          </Tabs.Item>
        ))
    }
  </slot>
</Tabs.List>
<Tabs.Content class={contentClass} {id}>
  <slot>
    {
      tabs &&
        tabs.map((tab, index: number) => (
          <Tabs.Pane {index} {fade} {id} active={tab.active} class={paneClass}>
            {tab.body}
          </Tabs.Pane>
        ))
    }
  </slot>
</Tabs.Content>
